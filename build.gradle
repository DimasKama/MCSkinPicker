plugins {
  id 'java'
  id 'application'
  id 'com.github.johnrengelman.shadow' version '8.1.1'
  id 'org.javamodularity.moduleplugin' version '1.8.12'
  id 'org.openjfx.javafxplugin' version '0.0.13'
  id 'org.beryx.jlink' version '2.25.0'
}

group 'com.dimaskama'
version '0.8'

repositories {
  mavenCentral()
  maven {
    url = "https://repo.u-team.info"
  }
}

ext {
  junitVersion = '5.9.2'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

application {
  mainModule = 'com.dimaskama.mcskinpicker'
  mainClass = 'com.dimaskama.mcskinpicker.Main'
}

javafx {
  version = '20.0.1'
  modules = ['javafx.controls', 'javafx.fxml', 'javafx.swing']
}

dependencies {
  implementation 'org.apache.logging.log4j:log4j-api:2.20.0'
  implementation 'org.apache.logging.log4j:log4j-core:2.20.0'
  implementation 'org.apache.httpcomponents:httpclient:4.5.13'
  implementation 'org.apache.httpcomponents:httpmime:4.5.13'
  implementation "net.hycrafthd:minecraft_authenticator:3.0.6"
  testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
useJUnitPlatform()}

jlink {
  imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
  options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
  launcher {
    name = 'app'
  }
}

jlinkZip {
  group = 'distribution'
}